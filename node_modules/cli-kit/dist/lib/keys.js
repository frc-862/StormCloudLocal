"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateKey = generateKey;

/**
 * Creates a keypress key object.
 *
 * @param {String} ch - A character sequence to generate the key from.
 * @returns {Object}
 */
function generateKey(ch) {
  const key = {
    ctrl: false,
    meta: false,
    name: undefined,
    sequence: typeof ch === 'string' ? ch : null,
    shift: false
  };
  let escaped = typeof ch === 'string' && ch.startsWith('\x1b');

  if (escaped) {
    ch = ch.substring(1);

    if (ch.startsWith('\x1b')) {
      ch = ch.substring(1);
    }
  }

  if (escaped && (ch === 'O' || ch === '[')) {// unsupported
  } else if (ch === '\n') {
    key.name = 'enter';
  } else if (ch === '\r') {
    key.name = 'return';
  } else if (ch === '\b' || ch === '\x7f') {
    key.name = 'backspace';
  } else if (ch === '\x1b') {
    key.meta = escaped;
    key.name = 'escape';
  } else if (ch === ' ') {
    key.meta = escaped;
    key.name = 'space';
  } else if (!escaped && ch <= '\x1a') {
    key.ctrl = true;
    key.name = String.fromCharCode(ch.charCodeAt(0) + 'a'.charCodeAt(0) - 1);
  } else if (/^[0-9A-Za-z]$/.test(ch)) {
    key.meta = escaped;
    key.name = ch.toLowerCase();
    key.shift = /^[A-Z]$/.test(ch);
  } else if (escaped) {
    key.meta = true;
    key.name = ch.length ? undefined : 'escape';
  }

  return key;
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9rZXlzLmpzIl0sIm5hbWVzIjpbImdlbmVyYXRlS2V5IiwiY2giLCJrZXkiLCJjdHJsIiwibWV0YSIsIm5hbWUiLCJ1bmRlZmluZWQiLCJzZXF1ZW5jZSIsInNoaWZ0IiwiZXNjYXBlZCIsInN0YXJ0c1dpdGgiLCJzdWJzdHJpbmciLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJjaGFyQ29kZUF0IiwidGVzdCIsInRvTG93ZXJDYXNlIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sU0FBU0EsV0FBVCxDQUFxQkMsRUFBckIsRUFBeUI7QUFDL0IsUUFBTUMsR0FBRyxHQUFHO0FBQ1hDLElBQUFBLElBQUksRUFBRSxLQURLO0FBRVhDLElBQUFBLElBQUksRUFBRSxLQUZLO0FBR1hDLElBQUFBLElBQUksRUFBRUMsU0FISztBQUlYQyxJQUFBQSxRQUFRLEVBQUUsT0FBT04sRUFBUCxLQUFjLFFBQWQsR0FBeUJBLEVBQXpCLEdBQThCLElBSjdCO0FBS1hPLElBQUFBLEtBQUssRUFBRTtBQUxJLEdBQVo7QUFRQSxNQUFJQyxPQUFPLEdBQUcsT0FBT1IsRUFBUCxLQUFjLFFBQWQsSUFBMEJBLEVBQUUsQ0FBQ1MsVUFBSCxDQUFjLE1BQWQsQ0FBeEM7O0FBQ0EsTUFBSUQsT0FBSixFQUFhO0FBQ1pSLElBQUFBLEVBQUUsR0FBR0EsRUFBRSxDQUFDVSxTQUFILENBQWEsQ0FBYixDQUFMOztBQUNBLFFBQUlWLEVBQUUsQ0FBQ1MsVUFBSCxDQUFjLE1BQWQsQ0FBSixFQUEyQjtBQUMxQlQsTUFBQUEsRUFBRSxHQUFHQSxFQUFFLENBQUNVLFNBQUgsQ0FBYSxDQUFiLENBQUw7QUFDQTtBQUNEOztBQUVELE1BQUlGLE9BQU8sS0FBS1IsRUFBRSxLQUFLLEdBQVAsSUFBY0EsRUFBRSxLQUFLLEdBQTFCLENBQVgsRUFBMkMsQ0FDMUM7QUFDQSxHQUZELE1BRU8sSUFBSUEsRUFBRSxLQUFLLElBQVgsRUFBaUI7QUFDdkJDLElBQUFBLEdBQUcsQ0FBQ0csSUFBSixHQUFXLE9BQVg7QUFDQSxHQUZNLE1BRUEsSUFBSUosRUFBRSxLQUFLLElBQVgsRUFBaUI7QUFDdkJDLElBQUFBLEdBQUcsQ0FBQ0csSUFBSixHQUFXLFFBQVg7QUFDQSxHQUZNLE1BRUEsSUFBSUosRUFBRSxLQUFLLElBQVAsSUFBZUEsRUFBRSxLQUFLLE1BQTFCLEVBQWtDO0FBQ3hDQyxJQUFBQSxHQUFHLENBQUNHLElBQUosR0FBVyxXQUFYO0FBQ0EsR0FGTSxNQUVBLElBQUlKLEVBQUUsS0FBSyxNQUFYLEVBQW1CO0FBQ3pCQyxJQUFBQSxHQUFHLENBQUNFLElBQUosR0FBV0ssT0FBWDtBQUNBUCxJQUFBQSxHQUFHLENBQUNHLElBQUosR0FBVyxRQUFYO0FBQ0EsR0FITSxNQUdBLElBQUlKLEVBQUUsS0FBSyxHQUFYLEVBQWdCO0FBQ3RCQyxJQUFBQSxHQUFHLENBQUNFLElBQUosR0FBV0ssT0FBWDtBQUNBUCxJQUFBQSxHQUFHLENBQUNHLElBQUosR0FBVyxPQUFYO0FBQ0EsR0FITSxNQUdBLElBQUksQ0FBQ0ksT0FBRCxJQUFZUixFQUFFLElBQUksTUFBdEIsRUFBOEI7QUFDcENDLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSixHQUFXLElBQVg7QUFDQUQsSUFBQUEsR0FBRyxDQUFDRyxJQUFKLEdBQVdPLE1BQU0sQ0FBQ0MsWUFBUCxDQUFvQlosRUFBRSxDQUFDYSxVQUFILENBQWMsQ0FBZCxJQUFtQixJQUFJQSxVQUFKLENBQWUsQ0FBZixDQUFuQixHQUF1QyxDQUEzRCxDQUFYO0FBQ0EsR0FITSxNQUdBLElBQUksZ0JBQWdCQyxJQUFoQixDQUFxQmQsRUFBckIsQ0FBSixFQUE4QjtBQUNwQ0MsSUFBQUEsR0FBRyxDQUFDRSxJQUFKLEdBQVdLLE9BQVg7QUFDQVAsSUFBQUEsR0FBRyxDQUFDRyxJQUFKLEdBQVdKLEVBQUUsQ0FBQ2UsV0FBSCxFQUFYO0FBQ0FkLElBQUFBLEdBQUcsQ0FBQ00sS0FBSixHQUFZLFVBQVVPLElBQVYsQ0FBZWQsRUFBZixDQUFaO0FBQ0EsR0FKTSxNQUlBLElBQUlRLE9BQUosRUFBYTtBQUNuQlAsSUFBQUEsR0FBRyxDQUFDRSxJQUFKLEdBQVcsSUFBWDtBQUNBRixJQUFBQSxHQUFHLENBQUNHLElBQUosR0FBV0osRUFBRSxDQUFDZ0IsTUFBSCxHQUFZWCxTQUFaLEdBQXdCLFFBQW5DO0FBQ0E7O0FBRUQsU0FBT0osR0FBUDtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVzIGEga2V5cHJlc3Mga2V5IG9iamVjdC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gY2ggLSBBIGNoYXJhY3RlciBzZXF1ZW5jZSB0byBnZW5lcmF0ZSB0aGUga2V5IGZyb20uXG4gKiBAcmV0dXJucyB7T2JqZWN0fVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVLZXkoY2gpIHtcblx0Y29uc3Qga2V5ID0ge1xuXHRcdGN0cmw6IGZhbHNlLFxuXHRcdG1ldGE6IGZhbHNlLFxuXHRcdG5hbWU6IHVuZGVmaW5lZCxcblx0XHRzZXF1ZW5jZTogdHlwZW9mIGNoID09PSAnc3RyaW5nJyA/IGNoIDogbnVsbCxcblx0XHRzaGlmdDogZmFsc2Vcblx0fTtcblxuXHRsZXQgZXNjYXBlZCA9IHR5cGVvZiBjaCA9PT0gJ3N0cmluZycgJiYgY2guc3RhcnRzV2l0aCgnXFx4MWInKTtcblx0aWYgKGVzY2FwZWQpIHtcblx0XHRjaCA9IGNoLnN1YnN0cmluZygxKTtcblx0XHRpZiAoY2guc3RhcnRzV2l0aCgnXFx4MWInKSkge1xuXHRcdFx0Y2ggPSBjaC5zdWJzdHJpbmcoMSk7XG5cdFx0fVxuXHR9XG5cblx0aWYgKGVzY2FwZWQgJiYgKGNoID09PSAnTycgfHwgY2ggPT09ICdbJykpIHtcblx0XHQvLyB1bnN1cHBvcnRlZFxuXHR9IGVsc2UgaWYgKGNoID09PSAnXFxuJykge1xuXHRcdGtleS5uYW1lID0gJ2VudGVyJztcblx0fSBlbHNlIGlmIChjaCA9PT0gJ1xccicpIHtcblx0XHRrZXkubmFtZSA9ICdyZXR1cm4nO1xuXHR9IGVsc2UgaWYgKGNoID09PSAnXFxiJyB8fCBjaCA9PT0gJ1xceDdmJykge1xuXHRcdGtleS5uYW1lID0gJ2JhY2tzcGFjZSc7XG5cdH0gZWxzZSBpZiAoY2ggPT09ICdcXHgxYicpIHtcblx0XHRrZXkubWV0YSA9IGVzY2FwZWQ7XG5cdFx0a2V5Lm5hbWUgPSAnZXNjYXBlJztcblx0fSBlbHNlIGlmIChjaCA9PT0gJyAnKSB7XG5cdFx0a2V5Lm1ldGEgPSBlc2NhcGVkO1xuXHRcdGtleS5uYW1lID0gJ3NwYWNlJztcblx0fSBlbHNlIGlmICghZXNjYXBlZCAmJiBjaCA8PSAnXFx4MWEnKSB7XG5cdFx0a2V5LmN0cmwgPSB0cnVlO1xuXHRcdGtleS5uYW1lID0gU3RyaW5nLmZyb21DaGFyQ29kZShjaC5jaGFyQ29kZUF0KDApICsgJ2EnLmNoYXJDb2RlQXQoMCkgLSAxKTtcblx0fSBlbHNlIGlmICgvXlswLTlBLVphLXpdJC8udGVzdChjaCkpIHtcblx0XHRrZXkubWV0YSA9IGVzY2FwZWQ7XG5cdFx0a2V5Lm5hbWUgPSBjaC50b0xvd2VyQ2FzZSgpO1xuXHRcdGtleS5zaGlmdCA9IC9eW0EtWl0kLy50ZXN0KGNoKTtcblx0fSBlbHNlIGlmIChlc2NhcGVkKSB7XG5cdFx0a2V5Lm1ldGEgPSB0cnVlO1xuXHRcdGtleS5uYW1lID0gY2gubGVuZ3RoID8gdW5kZWZpbmVkIDogJ2VzY2FwZSc7XG5cdH1cblxuXHRyZXR1cm4ga2V5O1xufVxuIl0sImZpbGUiOiJsaWIva2V5cy5qcyJ9
